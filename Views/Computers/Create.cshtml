@model TrainingUAJY.Models.Computer

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Computer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Brand", (IEnumerable<SelectListItem>)ViewBag.Brands, "Pilih Brand", new
              {
                  @class = "form-control",
                  id = "Brand",
                  style = "width:100%",
                  required = "required"
              })
            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Processor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Processor", (IEnumerable<SelectListItem>)ViewBag.Processors, "Pilih Processor", new
              {
                  @class = "form-control",
                  id = "Processor",
                  style = "width:100%",
                  required = "required"
              })
            @Html.ValidationMessageFor(model => model.Processor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductionYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductionYear, new { htmlAttributes = new { @type = "date", @class = "form-control", placeholder = "Tahun Produksi" } })
            @Html.ValidationMessageFor(model => model.ProductionYear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ScreenSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ScreenSize, new { htmlAttributes = new { @type = "number", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ScreenSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RAM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RAM, new { htmlAttributes = new { @type = "number", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RAM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Storage, htmlAttributes: new { @type = "number", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Storage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Storage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Stock, htmlAttributes: new { @type = "number", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @type = "number", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @type = "text", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
